# SPDX-FileCopyrightText: 2022-2024 Slavi Pantaleev
#
# SPDX-License-Identifier: AGPL-3.0-or-later

---
- name: Check existence of postgres-backup systemd service
  ansible.builtin.stat:
    path: "{{ devture_systemd_docker_base_systemd_path }}/{{ postgres_backup_identifier }}.service"
  register: postgres_backup_service_stat

- name: Uninstall postgres-backup systemd services and files
  when: postgres_backup_service_stat.stat.exists | bool
  block:
    - name: Ensure postgres-backup systemd service is stopped
      ansible.builtin.service:
        name: "{{ postgres_backup_identifier }}"
        state: stopped
        enabled: false
        daemon_reload: true

    - name: Ensure postgres-backup paths do not exist
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        # We intentionally don't delete `postgres_backup_data_path` here
        - "{{ devture_systemd_docker_base_systemd_path }}/{{ postgres_backup_identifier }}.service"
        - "{{ postgres_backup_config_path }}"

- name: Check existence of postgres-backup backup path
  ansible.builtin.stat:
    path: "{{ postgres_backup_data_path }}"
  register: postgres_backup_data_path_stat

# We just want to notify the user. Deleting data is too destructive.
- name: Inject warning if postgres-backup data remains
  ansible.builtin.set_fact:
    devture_playbook_runtime_messages_list: |
      {{
        devture_playbook_runtime_messages_list | default([])
        +
        [
          "NOTE: You are not using the local backup service to backup the PostgreSQL database, but some old data remains from before in `{{ postgres_backup_data_path }}`. Feel free to delete it."
        ]
      }}
  when: postgres_backup_data_path_stat.stat.exists | bool
